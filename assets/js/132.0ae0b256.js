(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{508:function(t,s,a){"use strict";a.r(s);var n=a(11),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"webpack中什么是-hmr原理是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack中什么是-hmr原理是什么"}},[t._v("#")]),t._v(" webpack中什么是 HMR原理是什么")]),t._v(" "),a("p",[t._v("可点击此处查看"),a("a",{attrs:{href:"https://github.com/shfshanyue/node-examples/tree/master/engineering/webpack/hmr",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例或实践代码(opens new window)"),a("OutboundLink")],1)]),t._v(" "),a("iframe",{staticStyle:{width:"684px","aspect-ratio":"4 / 3",margin:"1rem 0px"},attrs:{src:"https://player.bilibili.com/player.html?bvid=BV1R341147T3",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"allowfullscreen"}}),t._v(" "),a("p",[t._v("HMR，Hot Module Replacement，热模块替换，见名思意，即无需刷新在内存环境中即可替换掉过旧模块。与 Live Reload 相对应。")]),t._v(" "),a("blockquote",[a("p",[t._v("PS: Live Reload，当代码进行更新后，在浏览器自动刷新以获取最新前端代码。")])]),t._v(" "),a("p",[t._v("在 webpack 的运行时中 "),a("code",[t._v("__webpack__modules__")]),t._v(" 用以维护所有的模块。")]),t._v(" "),a("p",[t._v("而热模块替换的原理，即通过 "),a("code",[t._v("chunk")]),t._v(" 的方式加载最新的 "),a("code",[t._v("modules")]),t._v("，找到 "),a("code",[t._v("__webpack__modules__")]),t._v(" 中对应的模块逐一替换，并删除其上下缓存。")]),t._v(" "),a("p",[t._v("其精简数据结构用以下代码表示:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" __webpack_modules "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __webpack_require__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__webpack_require__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是一号模块"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JSONP 异步加载的所需要更新的 modules，并在 __webpack_modules__ 中进行替换")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpackHotUpdate"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是最新的一号模块"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其下为更具体更完整的流程，每一步都涉及众多，有兴趣的可阅读 "),a("code",[t._v("webpack-dev-server")]),t._v(" 及开发环境 webpack 运行时的源码。")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("webpack-dev-server")]),t._v(" 将打包输出 bundle 使用内存型文件系统控制，而非真实的文件系统。此时使用的是 "),a("a",{attrs:{href:"https://github.com/streamich/memfs",target:"_blank",rel:"noopener noreferrer"}},[t._v("memfs (opens new window)"),a("OutboundLink")],1),t._v("模拟 node.js "),a("code",[t._v("fs")]),t._v(" API")]),t._v(" "),a("li",[t._v("每当文件发生变更时，"),a("code",[t._v("webpack")]),t._v(" 将会重新编译，"),a("code",[t._v("webpack-dev-server")]),t._v(" 将会监控到此时文件变更事件，并找到其对应的 "),a("code",[t._v("module")]),t._v("。此时使用的是 "),a("a",{attrs:{href:"https://github.com/paulmillr/chokidar",target:"_blank",rel:"noopener noreferrer"}},[t._v("chokidar (opens new window)"),a("OutboundLink")],1),t._v("监控文件变更")]),t._v(" "),a("li",[a("code",[t._v("webpack-dev-server")]),t._v(" 将会把变更模块通知到浏览器端，此时使用 "),a("code",[t._v("websocket")]),t._v(" 与浏览器进行交流。此时使用的是 "),a("a",{attrs:{href:"https://github.com/websockets/ws",target:"_blank",rel:"noopener noreferrer"}},[t._v("ws(opens new window)"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("浏览器根据 "),a("code",[t._v("websocket")]),t._v(" 接收到 hash，并通过 hash 以 JSONP 的方式请求更新模块的 chunk")]),t._v(" "),a("li",[t._v("浏览器加载 chunk，并使用新的模块对旧模块进行热替换，并删除其缓存")])])])}),[],!1,null,null,null);s.default=e.exports}}]);